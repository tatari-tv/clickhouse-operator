---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: clickhouse-operator
  namespace: kube-system
  labels:
    clickhouse.altinity.com/chop: 0.20.3
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: clickhouse-operator-kube-system
  #namespace: kube-system
  labels:
    clickhouse.altinity.com/chop: 0.20.3
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - services
      - persistentvolumeclaims
      - secrets
    verbs:
      - get
      - list
      - patch
      - update
      - watch
      - create
      - delete
  - apiGroups:
      - ""
    resources:
      - endpoints
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
  - apiGroups:
      - ""
    resources:
      - persistentvolumes
      - pods
    verbs:
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - apps
    resources:
      - statefulsets
    verbs:
      - get
      - list
      - patch
      - update
      - watch
      - create
      - delete
  - apiGroups:
      - apps
    resources:
      - replicasets
    verbs:
      - get
      - patch
      - update
      - delete
  - apiGroups:
      - apps
    resourceNames:
      - clickhouse-operator
    resources:
      - deployments
    verbs:
      - get
      - patch
      - update
      - delete
  - apiGroups:
      - policy
    resources:
      - poddisruptionbudgets
    verbs:
      - get
      - list
      - patch
      - update
      - watch
      - create
      - delete
  - apiGroups:
      - clickhouse.altinity.com
    resources:
      - clickhouseinstallations
    verbs:
      - get
      - patch
      - update
      - delete
  - apiGroups:
      - clickhouse.altinity.com
    resources:
      - clickhouseinstallations
      - clickhouseinstallationtemplates
      - clickhouseoperatorconfigurations
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - clickhouse.altinity.com
    resources:
      - clickhouseinstallations/finalizers
      - clickhouseinstallationtemplates/finalizers
      - clickhouseoperatorconfigurations/finalizers
    verbs:
      - update
  - apiGroups:
      - clickhouse.altinity.com
    resources:
      - clickhouseinstallations/status
      - clickhouseinstallationtemplates/status
      - clickhouseoperatorconfigurations/status
    verbs:
      - get
      - update
      - patch
      - create
      - delete
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - get
      - list
---
# Setup ClusterRoleBinding between ClusterRole and ServiceAccount.
# ClusterRoleBinding is namespace-less and must have unique name
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: clickhouse-operator-kube-system
  #namespace: kube-system
  labels:
    clickhouse.altinity.com/chop: 0.20.3
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: clickhouse-operator-kube-system
subjects:
  - kind: ServiceAccount
    name: clickhouse-operator
    namespace: kube-system
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: etc-clickhouse-operator-files
  namespace: kube-system
  labels:
    clickhouse.altinity.com/chop: 0.20.3
    app: clickhouse-operator
data:
  config.yaml: |
    # IMPORTANT
    # This file is auto-generated
    # Do not edit this file - all changes would be lost
    # Edit appropriate template in the following folder:
    # deploy/builder/templates-config
    # IMPORTANT
    #
    # Template parameters available:
    #   WATCH_NAMESPACES=
    #   CH_USERNAME_PLAIN=
    #   CH_PASSWORD_PLAIN=
    #   CH_CREDENTIALS_SECRET_NAMESPACE=
    #   CH_CREDENTIALS_SECRET_NAME=clickhouse-operator
    
    ################################################
    ##
    ## Watch Section
    ##
    ################################################
    watch:
      # List of namespaces where clickhouse-operator watches for events.
      # Concurrently running operators should watch on different namespaces.
      #namespaces: ["dev", "test"]
      namespaces: []
    
    clickhouse:
      configuration:
        ################################################
        ##
        ## Configuration Files Section
        ##
        ################################################
        file:
          path:
            # Path to the folder where ClickHouse configuration files common for all instances within a CHI are located.
            common: config.d
            # Path to the folder where ClickHouse configuration files unique for each instance (host) within a CHI are located.
            host: conf.d
            # Path to the folder where ClickHouse configuration files with users' settings are located.
            # Files are common for all instances within a CHI.
            user: users.d
        ################################################
        ##
        ## Configuration Users Section
        ##
        ################################################
        user:
          default:
            # Default values for ClickHouse user configuration
            # 1. user/profile - string
            # 2. user/quota - string
            # 3. user/networks/ip - multiple strings
            # 4. user/password - string
            profile: default
            quota: default
            networksIP:
              - "::1"
              - "127.0.0.1"
            password: "default"
        ################################################
        ##
        ## Configuration Network Section
        ##
        ################################################
        network:
          # Default host_regexp to limit network connectivity from outside
          hostRegexpTemplate: "(chi-{chi}-[^.]+\\d+-\\d+|clickhouse\\-{chi})\\.{namespace}\\.svc\\.cluster\\.local$"
      ################################################
      ##
      ## Access to ClickHouse instances
      ##
      ################################################
      access:
        # Possible values for `scheme` are:
        # 1. http
        # 2. https
        scheme: ""
        # ClickHouse credentials (username, password and port) to be used by the operator to connect to ClickHouse instances.
        # Used for:
        # 1. Metrics requests
        # 2. Schema maintenance
        # 3. DROP DNS CACHE
        # User with these credentials can be specified in additional ClickHouse .xml config files,
        # located in `clickhouse.configuration.file.path.user` folder
        username: ""
        password: ""
        rootCA: ""
        
        # Location of the k8s Secret with username and password to be used by the operator to connect to ClickHouse instances.
        # Can be used instead of explicitly specified username and password which are:
        # clickhouse.access.username
        # clickhouse.access.password
        # Secret should have two keys:
        # 1. username
        # 2. password
        secret:
          # Empty `namespace` means that k8s secret would be looked in the same namespace where operator's pod is running.
          namespace: ""
          # Empty `name` means no k8s Secret would be looked for
          name: "clickhouse-operator"
        # Port where to connect to ClickHouse instances to
        port: 8123
        
        # Timeouts used to limit connection and queries from the operator to ClickHouse instances
        # Specified in seconds.
        timeouts:
          connect: 2
          query: 5
      
      metrics:
        timeouts:
          collect: 9
    
    ################################################
    ##
    ## Templates Section
    ##
    ################################################
    template:
      chi:
        # Path to the folder where ClickHouseInstallation .yaml manifests are located.
        # Manifests are applied in sorted alpha-numeric order.
        path: templates.d
    
    ################################################
    ##
    ## Reconcile Section
    ##
    ################################################
    reconcile:
      runtime:
        # Max number of concurrent reconciles in progress
        threadsNumber: 10
      
      statefulSet:
        create:
          # What to do in case created StatefulSet is not in 'Ready' after `reconcile.statefulSet.update.timeout` seconds
          # Possible options:
          # 1. abort - do nothing, just break the process and wait for an admin to assist
          # 2. delete - delete newly created problematic StatefulSet
          # 3. ignore - ignore an error, pretend nothing happened and move on to the next StatefulSet
          onFailure: ignore
        
        update:
          # How many seconds to wait for created/updated StatefulSet to be 'Ready'
          timeout: 300
          # How many seconds to wait between checks/polls for created/updated StatefulSet status
          pollInterval: 5
          # What to do in case updated StatefulSet is not in 'Ready' after `reconcile.statefulSet.update.timeout` seconds
          # Possible options:
          # 1. abort - do nothing, just break the process and wait for an admin to assist
          # 2. rollback - delete Pod and rollback StatefulSet to previous Generation.
          # Pod would be recreated by StatefulSet based on rollback-ed configuration
          # 3. ignore - ignore an error, pretend nothing happened and move on to the next StatefulSet
          onFailure: rollback
      
      host:
        # Whether reconciler should wait for a host:
        # - to be excluded from a cluster
        # OR
        # - to be included into a cluster
        # respectfully
        wait:
          exclude: true
          include: false
    
    ################################################
    ##
    ## Annotations management
    ##
    ################################################
    annotation:
      # Applied when:
      #  1. Propagating annotations from the CHI's `metadata.annotations` to child objects' `metadata.annotations`,
      #  2. Propagating annotations from the CHI Template's `metadata.annotations` to CHI's `metadata.annotations`,
      # Include annotations from the following list:
      # Applied only when not empty. Empty list means "include all, no selection"
      include: []
      # Exclude annotations from the following list:
      exclude: []
    
    ################################################
    ##
    ## Labels management
    ##
    ################################################
    label:
      # Applied when:
      #  1. Propagating labels from the CHI's `metadata.labels` to child objects' `metadata.labels`,
      #  2. Propagating labels from the CHI Template's `metadata.labels` to CHI's `metadata.labels`,
      # Include labels from the following list:
      # Applied only when not empty. Empty list means "include all, no selection"
      include: []
      # Exclude labels from the following list:
      # Applied only when not empty. Empty list means "nothing to exclude, no selection"
      exclude: []
      # Whether to append *Scope* labels to StatefulSet and Pod.
      # Full list of available *scope* labels check in 'labeler.go'
      #  LabelShardScopeIndex
      #  LabelReplicaScopeIndex
      #  LabelCHIScopeIndex
      #  LabelCHIScopeCycleSize
      #  LabelCHIScopeCycleIndex
      #  LabelCHIScopeCycleOffset
      #  LabelClusterScopeIndex
      #  LabelClusterScopeCycleSize
      #  LabelClusterScopeCycleIndex
      #  LabelClusterScopeCycleOffset
      appendScope: "no"
    
    ################################################
    ##
    ## StatefulSet management
    ##
    ################################################
    statefulSet:
      revisionHistoryLimit: 0
    
    ################################################
    ##
    ## Pod management
    ##
    ################################################
    pod:
      # Grace period for Pod termination.
      # How many seconds to wait between sending
      # SIGTERM and SIGKILL during Pod termination process.
      # Increase this number is case of slow shutdown.
      terminationGracePeriod: 30
    
    ################################################
    ##
    ## Log parameters
    ##
    ################################################
    logger:
      logtostderr: "true"
      alsologtostderr: "false"
      v: "1"
      stderrthreshold: ""
      vmodule: ""
      log_backtrace_at: ""

---
# Template Parameters:
#
# NAME=etc-clickhouse-operator-confd-files
# NAMESPACE=kube-system
# COMMENT=
#
apiVersion: v1
kind: ConfigMap
metadata:
  name: etc-clickhouse-operator-confd-files
  namespace: kube-system
  labels:
    clickhouse.altinity.com/chop: 0.20.3
    app: clickhouse-operator
data:
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: etc-clickhouse-operator-configd-files
  namespace: kube-system
  labels:
    clickhouse.altinity.com/chop: 0.20.3
    app: clickhouse-operator
data:
  01-clickhouse-01-listen.xml: |
    <!-- IMPORTANT -->
    <!-- This file is auto-generated -->
    <!-- Do not edit this file - all changes would be lost -->
    <!-- Edit appropriate template in the following folder: -->
    <!-- deploy/builder/templates-config -->
    <!-- IMPORTANT -->
    <yandex>
        <!-- Listen wildcard address to allow accepting connections from other containers and host network. -->
        <listen_host>::</listen_host>
        <listen_host>0.0.0.0</listen_host>
        <listen_try>1</listen_try>
    </yandex>

  01-clickhouse-02-logger.xml: |
    <!-- IMPORTANT -->
    <!-- This file is auto-generated -->
    <!-- Do not edit this file - all changes would be lost -->
    <!-- Edit appropriate template in the following folder: -->
    <!-- deploy/builder/templates-config -->
    <!-- IMPORTANT -->
    <yandex>
        <logger>
            <!-- Possible levels: https://github.com/pocoproject/poco/blob/develop/Foundation/include/Poco/Logger.h#L105 -->
            <level>debug</level>
            <log>/var/log/clickhouse-server/clickhouse-server.log</log>
            <errorlog>/var/log/clickhouse-server/clickhouse-server.err.log</errorlog>
            <size>1000M</size>
            <count>10</count>
            <!-- Default behavior is autodetection (log to console if not daemon mode and is tty) -->
            <console>1</console>
        </logger>
    </yandex>

  01-clickhouse-03-query_log.xml: |
    <!-- IMPORTANT -->
    <!-- This file is auto-generated -->
    <!-- Do not edit this file - all changes would be lost -->
    <!-- Edit appropriate template in the following folder: -->
    <!-- deploy/builder/templates-config -->
    <!-- IMPORTANT -->
    <yandex>
        <query_log replace="1">
            <database>system</database>
            <table>query_log</table>
            <engine>Engine = MergeTree PARTITION BY event_date ORDER BY event_time TTL event_date + interval 30 day</engine>
            <flush_interval_milliseconds>7500</flush_interval_milliseconds>
        </query_log>
        <query_thread_log remove="1"/>
    </yandex>

  01-clickhouse-04-part_log.xml: |
    <!-- IMPORTANT -->
    <!-- This file is auto-generated -->
    <!-- Do not edit this file - all changes would be lost -->
    <!-- Edit appropriate template in the following folder: -->
    <!-- deploy/builder/templates-config -->
    <!-- IMPORTANT -->
    <yandex>
        <part_log replace="1">
            <database>system</database>
            <table>part_log</table>
            <engine>Engine = MergeTree PARTITION BY event_date ORDER BY event_time TTL event_date + interval 30 day</engine>
            <flush_interval_milliseconds>7500</flush_interval_milliseconds>
        </part_log>
    </yandex>

  named_collections.xml: |
    <yandex>
        <named_collections>
            <s3_tpch>
                <format>Parquet</format>
            </s3_tpch>
        </named_collections>
    </yandex>
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: etc-clickhouse-operator-templatesd-files
  namespace: kube-system
  labels:
    clickhouse.altinity.com/chop: 0.20.3
    app: clickhouse-operator
data:
  001-templates.json.example: |
    {
      "apiVersion": "clickhouse.altinity.com/v1",
      "kind": "ClickHouseInstallationTemplate",
      "metadata": {
        "name": "01-default-volumeclaimtemplate"
      },
      "spec": {
        "templates": {
          "volumeClaimTemplates": [
            {
              "name": "chi-default-volume-claim-template",
              "spec": {
                "accessModes": [
                  "ReadWriteOnce"
                ],
                "resources": {
                  "requests": {
                    "storage": "2Gi"
                  }
                }
              }
            }
          ],
          "podTemplates": [
            {
              "name": "chi-default-oneperhost-pod-template",
              "distribution": "OnePerHost",
              "spec": {
                "containers" : [
                  {
                    "name": "clickhouse",
                    "image": "clickhouse/clickhouse-server:22.3",
                    "ports": [
                      {
                        "name": "http",
                        "containerPort": 8123
                      },
                      {
                        "name": "client",
                        "containerPort": 9000
                      },
                      {
                        "name": "interserver",
                        "containerPort": 9009
                      }
                    ]
                  }
                ]
              }
            }
          ]
        }
      }
    }
  default-pod-template.yaml.example: |
    apiVersion: "clickhouse.altinity.com/v1"
    kind: "ClickHouseInstallationTemplate"
    metadata:
      name: "default-oneperhost-pod-template"
    spec:
      templates:
        podTemplates:
          - name: default-oneperhost-pod-template
            distribution: "OnePerHost"
  default-storage-template.yaml.example: |
    apiVersion: "clickhouse.altinity.com/v1"
    kind: "ClickHouseInstallationTemplate"
    metadata:
      name: "default-storage-template-2Gi"
    spec:
      templates:
        volumeClaimTemplates:
          - name: default-storage-template-2Gi
            spec:
              accessModes:
                - ReadWriteOnce
              resources:
                requests:
                  storage: 2Gi

  readme: |
    Templates in this folder are packaged with an operator and available via 'useTemplate'
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: etc-clickhouse-operator-usersd-files
  namespace: kube-system
  labels:
    clickhouse.altinity.com/chop: 0.20.3
    app: clickhouse-operator
data:
  01-clickhouse-user.xml: |
    <!-- IMPORTANT -->
    <!-- This file is auto-generated -->
    <!-- Do not edit this file - all changes would be lost -->
    <!-- Edit appropriate template in the following folder: -->
    <!-- deploy/builder/templates-config -->
    <!-- IMPORTANT -->
    <!--
    #
    # Template parameters available:
    #
    -->
    <yandex>
        <users>
            <clickhouse_operator>
                <networks>
                    <ip>127.0.0.1</ip>
                </networks>
                <profile>clickhouse_operator</profile>
                <quota>default</quota>
            </clickhouse_operator>
        </users>
        <profiles>
            <clickhouse_operator>
                <log_queries>0</log_queries>
                <skip_unavailable_shards>1</skip_unavailable_shards>
                <http_connection_timeout>10</http_connection_timeout>
                <max_concurrent_queries_for_all_users>0</max_concurrent_queries_for_all_users>
                <os_thread_priority>0</os_thread_priority>
            </clickhouse_operator>
        </profiles>
    </yandex>

  02-clickhouse-default-profile.xml: |
    <!-- IMPORTANT -->
    <!-- This file is auto-generated -->
    <!-- Do not edit this file - all changes would be lost -->
    <!-- Edit appropriate template in the following folder: -->
    <!-- deploy/builder/templates-config -->
    <!-- IMPORTANT -->
    <yandex>
        <profiles>
            <default>
                <os_thread_priority>2</os_thread_priority>
                <log_queries>1</log_queries>
                <connect_timeout_with_failover_ms>1000</connect_timeout_with_failover_ms>
                <distributed_aggregation_memory_efficient>1</distributed_aggregation_memory_efficient>
                <parallel_view_processing>1</parallel_view_processing>
                <do_not_merge_across_partitions_select_final>1</do_not_merge_across_partitions_select_final>
                <load_balancing>nearest_hostname</load_balancing>
            </default>
        </profiles>
    </yandex>
  03-database-ordinary.xml: |
    <!-- IMPORTANT -->
    <!-- This file is auto-generated -->
    <!-- Do not edit this file - all changes would be lost -->
    <!-- Edit appropriate template in the following folder: -->
    <!-- deploy/builder/templates-config -->
    <!-- IMPORTANT -->
    <!--  Remove it for ClickHouse versions before 20.4 -->
    <yandex>
        <profiles>
            <default>
                <default_database_engine>Ordinary</default_database_engine>
            </default>
        </profiles>
    </yandex>
---
apiVersion: v1
kind: Secret
metadata:
  name: clickhouse-operator
  namespace: kube-system
  labels:
    clickhouse.altinity.com/chop: 0.20.3
    app: clickhouse-operator
type: Opaque
stringData:
  username:  ""
  password: ""
---
# Setup Deployment for clickhouse-operator
# Deployment would be created in kubectl-specified namespace
kind: Deployment
apiVersion: apps/v1
metadata:
  name: clickhouse-operator
  namespace: kube-system
  labels:
    clickhouse.altinity.com/chop: 0.20.3
    app: clickhouse-operator
spec:
  replicas: 1
  selector:
    matchLabels:
      app: clickhouse-operator
  template:
    metadata:
      labels:
        app: clickhouse-operator
      annotations:
        prometheus.io/port: '8888'
        prometheus.io/scrape: 'true'
    spec:
      serviceAccountName: clickhouse-operator
      volumes:
        - name: etc-clickhouse-operator-folder
          configMap:
            name: etc-clickhouse-operator-files
        - name: etc-clickhouse-operator-confd-folder
          configMap:
            name: etc-clickhouse-operator-confd-files
        - name: etc-clickhouse-operator-configd-folder
          configMap:
            name: etc-clickhouse-operator-configd-files
        - name: etc-clickhouse-operator-templatesd-folder
          configMap:
            name: etc-clickhouse-operator-templatesd-files
        - name: etc-clickhouse-operator-usersd-folder
          configMap:
            name: etc-clickhouse-operator-usersd-files
      containers:
        - name: clickhouse-operator
          image: altinity/clickhouse-operator:0.20.3
          imagePullPolicy: Always
          volumeMounts:
            - name: etc-clickhouse-operator-folder
              mountPath: /etc/clickhouse-operator
            - name: etc-clickhouse-operator-confd-folder
              mountPath: /etc/clickhouse-operator/conf.d
            - name: etc-clickhouse-operator-configd-folder
              mountPath: /etc/clickhouse-operator/config.d
            - name: etc-clickhouse-operator-templatesd-folder
              mountPath: /etc/clickhouse-operator/templates.d
            - name: etc-clickhouse-operator-usersd-folder
              mountPath: /etc/clickhouse-operator/users.d
          env:
            # Pod-specific
            # spec.nodeName: ip-172-20-52-62.ec2.internal
            - name: OPERATOR_POD_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            # metadata.name: clickhouse-operator-6f87589dbb-ftcsf
            - name: OPERATOR_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            # metadata.namespace: kube-system
            - name: OPERATOR_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            # status.podIP: 100.96.3.2
            - name: OPERATOR_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            # spec.serviceAccount: clickhouse-operator
            # spec.serviceAccountName: clickhouse-operator
            - name: OPERATOR_POD_SERVICE_ACCOUNT
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName

            # Container-specific
            - name: OPERATOR_CONTAINER_CPU_REQUEST
              valueFrom:
                resourceFieldRef:
                  containerName: clickhouse-operator
                  resource: requests.cpu
            - name: OPERATOR_CONTAINER_CPU_LIMIT
              valueFrom:
                resourceFieldRef:
                  containerName: clickhouse-operator
                  resource: limits.cpu
            - name: OPERATOR_CONTAINER_MEM_REQUEST
              valueFrom:
                resourceFieldRef:
                  containerName: clickhouse-operator
                  resource: requests.memory
            - name: OPERATOR_CONTAINER_MEM_LIMIT
              valueFrom:
                resourceFieldRef:
                  containerName: clickhouse-operator
                  resource: limits.memory

        - name: metrics-exporter
          image: altinity/metrics-exporter:0.20.3
          imagePullPolicy: Always
          volumeMounts:
            - name: etc-clickhouse-operator-folder
              mountPath: /etc/clickhouse-operator
            - name: etc-clickhouse-operator-confd-folder
              mountPath: /etc/clickhouse-operator/conf.d
            - name: etc-clickhouse-operator-configd-folder
              mountPath: /etc/clickhouse-operator/config.d
            - name: etc-clickhouse-operator-templatesd-folder
              mountPath: /etc/clickhouse-operator/templates.d
            - name: etc-clickhouse-operator-usersd-folder
              mountPath: /etc/clickhouse-operator/users.d
          env:
            # Pod-specific
            # spec.nodeName: ip-172-20-52-62.ec2.internal
            - name: OPERATOR_POD_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            # metadata.name: clickhouse-operator-6f87589dbb-ftcsf
            - name: OPERATOR_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            # metadata.namespace: kube-system
            - name: OPERATOR_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            # status.podIP: 100.96.3.2
            - name: OPERATOR_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            # spec.serviceAccount: clickhouse-operator
            # spec.serviceAccountName: clickhouse-operator
            - name: OPERATOR_POD_SERVICE_ACCOUNT
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName

            # Container-specific
            - name: OPERATOR_CONTAINER_CPU_REQUEST
              valueFrom:
                resourceFieldRef:
                  containerName: clickhouse-operator
                  resource: requests.cpu
            - name: OPERATOR_CONTAINER_CPU_LIMIT
              valueFrom:
                resourceFieldRef:
                  containerName: clickhouse-operator
                  resource: limits.cpu
            - name: OPERATOR_CONTAINER_MEM_REQUEST
              valueFrom:
                resourceFieldRef:
                  containerName: clickhouse-operator
                  resource: requests.memory
            - name: OPERATOR_CONTAINER_MEM_LIMIT
              valueFrom:
                resourceFieldRef:
                  containerName: clickhouse-operator
                  resource: limits.memory
          ports:
            - containerPort: 8888
              name: metrics
---
# Setup ClusterIP Service to provide monitoring metrics for Prometheus
# Service would be created in kubectl-specified namespace
# In order to get access outside of k8s it should be exposed as:
# kubectl --namespace prometheus port-forward service/prometheus 9090
# and point browser to localhost:9090
kind: Service
apiVersion: v1
metadata:
  name: clickhouse-operator-metrics
  namespace: kube-system
  labels:
    clickhouse.altinity.com/chop: 0.20.3
    app: clickhouse-operator
spec:
  ports:
    - port: 8888
      name: clickhouse-operator-metrics
  selector:
    app: clickhouse-operator
